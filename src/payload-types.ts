/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  collections: {
    services: Service;
    landing: Landing;
    blogs: Blog;
    reviews: Review;
    faqs: Faq;
    policies: Policy;
    media: Media;
    users: User;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  globals: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
  };
  login: {
    password: string;
    email: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "services".
 */
export interface Service {
  id: number;
  label: string;
  slug?: string | null;
  servicePage: {
    title: string;
    image: number | Media;
    description: string;
    services: {
      title: string;
      subtitle: string;
      description: string;
      features?:
        | {
            feature: string;
            id?: string | null;
          }[]
        | null;
      id?: string | null;
    }[];
    statistics?:
      | {
          number: number;
          text: string;
          id?: string | null;
        }[]
      | null;
    landing?: (number | Landing)[] | null;
    blogs?: (number | Blog)[] | null;
    ctaTitle: string;
    ctaDescription: string;
    ctaButtonText: string;
  };
  homePage: {
    title: string;
    text: string;
    buttonText: string;
    image?: number | Media | null;
    'image-bg'?: number | Media | null;
  };
  seo: {
    metaTitle: string;
    metaDescription: string;
  };
  style: {
    highlightColor: string;
    bgColorFrom: string;
    bgColorTo: string;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  prefix?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "landing".
 */
export interface Landing {
  id: number;
  title: string;
  uri?: string | null;
  category: string;
  contnet: {
    layout: (
      | {
          content: {
            title: string;
            label?: string | null;
            subtitle: string;
            buttonType?: ('cta' | 'link') | null;
            buttonText: string;
            ctaTitle?: string | null;
            ctaHasMessage?: boolean | null;
            ctaHasBudget?: boolean | null;
            buttonLink?: string | null;
            image: number | Media;
          };
          style: {
            style: 'dark-purple' | 'light-purple' | 'blue' | 'white' | 'black' | 'red' | 'cyan' | 'orange';
          };
          id?: string | null;
          blockName?: string | null;
          blockType: 'hero';
        }
      | {
          content?: {
            title?: string | null;
            text?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            text_html?: string | null;
          };
          style: {
            style: 'dark-purple' | 'light-purple' | 'blue' | 'white' | 'black' | 'red' | 'cyan' | 'orange';
          };
          id?: string | null;
          blockName?: string | null;
          blockType: 'text';
        }
      | {
          content: {
            hasTitle?: ('yes' | 'no') | null;
            hasButton?: ('yes' | 'no') | null;
            imagePosition?: ('left' | 'right') | null;
            title?: string | null;
            text: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            };
            text_html?: string | null;
            image: number | Media;
            buttonType?: ('cta' | 'link') | null;
            buttonText: string;
            ctaTitle?: string | null;
            ctaHasMessage?: boolean | null;
            ctaHasBudget?: boolean | null;
            buttonLink?: string | null;
          };
          style: {
            style: 'dark-purple' | 'light-purple' | 'blue' | 'white' | 'black' | 'red' | 'cyan' | 'orange';
          };
          id?: string | null;
          blockName?: string | null;
          blockType: 'image-text';
        }
      | {
          content: {
            hasTitle?: ('yes' | 'no') | null;
            hasSubtitle?: ('yes' | 'no') | null;
            hasButton?: ('yes' | 'no') | null;
            title?: string | null;
            subtitle?: string | null;
            buttonType?: ('cta' | 'link') | null;
            buttonText: string;
            ctaTitle?: string | null;
            ctaHasMessage?: boolean | null;
            ctaHasBudget?: boolean | null;
            buttonLink?: string | null;
            statistic: {
              prefix?: string | null;
              number: string;
              suffix?: string | null;
              description: string;
              id?: string | null;
            }[];
          };
          style: {
            style: 'dark-purple' | 'light-purple' | 'blue' | 'white' | 'black' | 'red' | 'cyan' | 'orange';
          };
          id?: string | null;
          blockName?: string | null;
          blockType: 'statistics';
        }
      | {
          content?: {
            hasTitle?: ('yes' | 'no') | null;
            hasSubtitle?: ('yes' | 'no') | null;
            title?: string | null;
            subtitle?: string | null;
            packages?:
              | {
                  isDiscounted?: ('yes' | 'no') | null;
                  isMostPopular?: ('yes' | 'no') | null;
                  title: string;
                  description: string;
                  regularPrice: string;
                  discountedPrice?: string | null;
                  priceDetails?: string | null;
                  buttonType?: ('cta' | 'link') | null;
                  buttonText: string;
                  ctaTitle?: string | null;
                  ctaHasMessage?: boolean | null;
                  ctaHasBudget?: boolean | null;
                  buttonLink?: string | null;
                  features?:
                    | {
                        feature: string;
                        id?: string | null;
                      }[]
                    | null;
                  services?:
                    | {
                        service: string;
                        id?: string | null;
                      }[]
                    | null;
                  id?: string | null;
                }[]
              | null;
          };
          style: {
            style: 'dark-purple' | 'light-purple' | 'blue' | 'white' | 'black' | 'red' | 'cyan' | 'orange';
          };
          id?: string | null;
          blockName?: string | null;
          blockType: 'pricing';
        }
      | {
          content?: {
            hasTitle?: ('yes' | 'no') | null;
            hasSubtitle?: ('yes' | 'no') | null;
            title?: string | null;
            subtitle?: string | null;
            faq?: (number | Faq)[] | null;
          };
          style: {
            style: 'dark-purple' | 'light-purple' | 'blue' | 'white' | 'black' | 'red' | 'cyan' | 'orange';
          };
          id?: string | null;
          blockName?: string | null;
          blockType: 'faqs';
        }
      | {
          content?: {
            title?: string | null;
            highlights?:
              | {
                  icon: number | Media;
                  title: string;
                  text?: string | null;
                  id?: string | null;
                }[]
              | null;
          };
          style: {
            style: 'dark-purple' | 'light-purple' | 'blue' | 'white' | 'black' | 'red' | 'cyan' | 'orange';
          };
          id?: string | null;
          blockName?: string | null;
          blockType: 'highlights';
        }
      | {
          content: {
            hasTitle?: ('yes' | 'no') | null;
            hasSubtitle?: ('yes' | 'no') | null;
            hasButton?: ('yes' | 'no') | null;
            title?: string | null;
            subtitle?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            subtitle_html?: string | null;
            buttonType?: ('cta' | 'link') | null;
            buttonText: string;
            ctaTitle?: string | null;
            ctaHasMessage?: boolean | null;
            ctaHasBudget?: boolean | null;
            buttonLink?: string | null;
            services: {
              icon?: number | Media | null;
              title: string;
              description: string;
              id?: string | null;
            }[];
          };
          style: {
            style: 'dark-purple' | 'light-purple' | 'blue' | 'white' | 'black' | 'red' | 'cyan' | 'orange';
          };
          id?: string | null;
          blockName?: string | null;
          blockType: 'services';
        }
      | {
          content: {
            hasTitle?: ('yes' | 'no') | null;
            hasSubtitle?: ('yes' | 'no') | null;
            hasButton?: ('yes' | 'no') | null;
            title?: string | null;
            subtitle?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            subtitle_html?: string | null;
            buttonType?: ('cta' | 'link') | null;
            buttonText: string;
            ctaTitle?: string | null;
            ctaHasMessage?: boolean | null;
            ctaHasBudget?: boolean | null;
            buttonLink?: string | null;
            steps: {
              title: string;
              description: string;
              id?: string | null;
            }[];
          };
          style: {
            style: 'dark-purple' | 'light-purple' | 'blue' | 'white' | 'black' | 'red' | 'cyan' | 'orange';
          };
          id?: string | null;
          blockName?: string | null;
          blockType: 'steps';
        }
      | {
          content: {
            blogs: (number | Blog)[];
          };
          style: {
            style: 'dark-purple' | 'light-purple' | 'blue' | 'white' | 'black' | 'red' | 'cyan' | 'orange';
          };
          id?: string | null;
          blockName?: string | null;
          blockType: 'blog';
        }
      | {
          content: {
            title: string;
            text: string;
            buttonType?: ('cta' | 'link') | null;
            buttonText: string;
            ctaTitle?: string | null;
            ctaHasMessage?: boolean | null;
            ctaHasBudget?: boolean | null;
            buttonLink?: string | null;
            image: number | Media;
          };
          style: {
            style: 'dark-purple' | 'light-purple' | 'blue' | 'white' | 'black' | 'red' | 'cyan' | 'orange';
          };
          id?: string | null;
          blockName?: string | null;
          blockType: 'cta';
        }
      | {
          content: {
            title: string;
            reveiws: (number | Review)[];
          };
          style: {
            style: 'dark-purple' | 'light-purple' | 'blue' | 'white' | 'black' | 'red' | 'cyan' | 'orange';
          };
          id?: string | null;
          blockName?: string | null;
          blockType: 'review';
        }
    )[];
  };
  seo: {
    metaTitle: string;
    metaDescription: string;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "faqs".
 */
export interface Faq {
  id: number;
  category: 'general' | 'web-dev' | 'seo' | 'brand-design';
  question: string;
  answer: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  answer_html?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blogs".
 */
export interface Blog {
  id: number;
  title: string;
  slug?: string | null;
  content: {
    category: (
      | 'youtube-seo'
      | 'important-event'
      | 'case-studie'
      | 'web-design'
      | 'web-dev'
      | 'organic-seo'
      | 'local-seo'
      | 'brand-design'
    )[];
    featured: 'true' | 'false';
    description: string;
    image: number | Media;
    content: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    content_html?: string | null;
    ctaHeading?: string | null;
    ctaDescription?: string | null;
    buttonType?: ('cta' | 'link') | null;
    buttonText: string;
    ctaTitle?: string | null;
    ctaHasMessage?: boolean | null;
    ctaHasBudget?: boolean | null;
    buttonLink?: string | null;
  };
  seo: {
    metaTitle: string;
    metaDescription: string;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reviews".
 */
export interface Review {
  id: number;
  title?: string | null;
  name?: string | null;
  text: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "policies".
 */
export interface Policy {
  id: number;
  title: string;
  slug: string;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  content_html?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}